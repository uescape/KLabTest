@page "/Register"
<h3>Register</h3>

@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@inject NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Models.ViewModels
@using System.Text
@using System.Text.Json
@using Models.RequestResponses

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <label>Email</label>
            <input class="form-control" @bind="model.Email" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <input class="form-control" type="password" @bind="model.Password" />
        </div>
        <button class="btn btn-primary" @onclick="@AuthLogin">Login</button>
    </div>
</div>

@code {
    private static readonly HttpClient client = new HttpClient();
    UserViewModel model = new UserViewModel();

    async void AuthLogin()
    {
        var jsonObject = JsonSerializer.Serialize(model);
        var content = new StringContent(jsonObject.ToString(), Encoding.UTF8, "application/json");

        var response = await client.PostAsync(navigationManager.BaseUri + "api/Account/Register", content);

        var responseString = await response.Content.ReadAsStringAsync();

        if (response.IsSuccessStatusCode)
        {
            response = await client.PostAsync(navigationManager.BaseUri + "api/Account/Login", content);
            responseString = await response.Content.ReadAsStringAsync();
            if (response.IsSuccessStatusCode)
            {
                LoginRequestResponse resp = JsonSerializer.Deserialize<LoginRequestResponse>(responseString);
                await localStorage.SetItemAsStringAsync("token", resp.JwtToken);
                navigationManager.NavigateTo("TaskList");
            }
        }
    }
}